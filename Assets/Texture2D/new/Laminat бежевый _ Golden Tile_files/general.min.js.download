$(document).ready(function () {


    $('[data-fancybox]').fancybox({
        smallBtn: true,
        toolbar: false,
        btnTpl: {
            smallBtn: '<button data-fancybox-close="" class="fancybox-button fancybox-button--close" title="Close">&#10006;</button>'
        }
    });

    $('.trigger').click(function () {
        $('.js-modal-parnter').toggleClass('open');
        return false;
    });


    $('.btn-close-cross').click(function () {
        $(this).parents('.modal-wrapper').removeClass('open');
        return false;
    });


    setTimeout(function () {
        var list = $('.gallery-slider-one .slick-dots').find('li');
        if (list.length <= 1) {
            $('.gallery-slider-one .slick-dots li').css("display", "none")
        }
    }, 0);


    $(function () {

        $('#ri-grid').gridrotator({
            animType: 'rotateLeft',
            step: 'random',
            maxStep: 1,
            rows: 3,
            columns: 4,
            w1024: {
                rows: 3,
                columns: 3
            },
            w768: {
                rows: 3,
                columns: 2
            },

            w480: {
                rows: 2,
                columns: 2
            },
            w320: {
                rows: 4,
                columns: 1
            },
            w240: {
                rows: 2,
                columns: 1
            }
        });

    });


    $('.svg-icon').hover(
        function () {
            if (document.querySelectorAll('.svg-icon path').length) {
                for (var i = 0; i < document.querySelectorAll('.svg-icon path').length; i++) {
                    var stroke = document.querySelectorAll('.svg-icon path')[i].getTotalLength();
                    document.querySelectorAll('.svg-icon path')[i].style.strokeDasharray = stroke
                    document.querySelectorAll('.svg-icon path')[i].style.strokeDashoffset = stroke
                }
            }
        },
        function () {
            var _this = $(this);
            $(this).addClass('unhover');
            $(this).find('path').attr('style', 'stroke-dashoffset:0;');
            setTimeout(function () {
                _this.removeClass('unhover');
            }, 1000)
        }
    );


    var $banners = $(".banners .banner");
    var $icons = $(".features-gholder_js .item");

    $icons.hover(function () {
        var bannerId = '#' + $(this).data('bannerId');
        $banners.removeClass('active');
        $banners.filter(bannerId).addClass('active');
    });


    $('.slider-foto-gallery').slick({
        centerMode: true,
        centerPadding: '22%',
        slidesToShow: 1,
        dots: true,
        arrows: false,
        infinite: false,
        responsive: [
            {
                breakpoint: 1451,
                settings: {
                    arrows: false,
                    centerMode: true,
                    dots: true,
                 adaptiveHeight: true,
                    variableWidth: true,
                    centerPadding: '15%',
                    slidesToShow: 2

                }
            },
            {
                breakpoint: 800,
                settings: {
                    arrows: false,
                    centerMode: true,
                    dots: true,
                    adaptiveHeight: true,
                    variableWidth: true,
                    centerPadding: '0',
                    slidesToShow: 1
                }
            }
        ]
    });

    $('.gallery-slider-one').slick({
        infinite: true,
        slidesToShow: 1,
        arrows: true,
        dots: true,
        prevArrow: '<button type="button" class="slick-prev"><i class="tile-ico tile-ico-arrow-right"></i></button>',
        nextArrow: '<button type="button" class="slick-next"><i class="tile-ico tile-ico-arrow-left"></i></button>',
        slidesToScroll: 1
    });

//slider-history
    $('.slider-history-big').slick({
        slidesToShow: 1,
        slidesToScroll: 1,
        arrows: false,
        fade: true,
        infinite: false,
        adaptiveHeight: true,
        asNavFor: '.slider-history-small'
    });
    $('.slider-history-small').slick({
        slidesToShow: 4,
        slidesToScroll: 1,
        centerPadding: '27%',
        infinite: false,
        prevArrow: '<button type="button" class="slick-prev"><i class="tile-ico tile-ico-arrow-right"></i></button>',
        nextArrow: '<button type="button" class="slick-next"><i class="tile-ico tile-ico-arrow-left"></i></button>',
        asNavFor: '.slider-history-big',
        dots: false,
        centerMode: true,
        focusOnSelect: true,
        responsive: [
            {
                breakpoint: 1200,
                settings: {
                    slidesToShow: 3,
                    slidesToScroll: 1,
                    centerPadding: '15%',
                    centerMode: true,
                    dots: false

                }
            },
            {
                breakpoint: 480,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 1,
                    centerPadding: '12%',
                    centerMode: true,
                    dots: false

                }
            }
        ]
    });

    $('.slider-quote, .offer-slider').slick({
        infinite: true,
        slidesToShow: 1,
        arrows: false,
        autoplay: true,
        dots: true,
        autoplaySpeed: 8000,
        slidesToScroll: 1
    });

    $('.partners-slider').slick({
        infinite: true,
        slidesToShow: 3,
        arrows: false,
        dots: true,
        slidesToScroll: 1,
        responsive: [
            {
                breakpoint: 1024,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 1,
                    arrows: false,
                    dots: true
                }
            },
            {
                breakpoint: 767,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    arrows: false,
                    dots: true

                }
            }
        ]
    });

    $('ul.tabs .tab').click(function () {
        $('.active .slider-big').slick('slickGoTo', 1);
        $('.active .slider-small').slick('slickGoTo', 1);
    });

    $("ul.tabs").tabs({
        onShow: function (tab) {
            console.log(tab);
            /*$('.slider-big').slick('resize');*/
            $('.slider-small').slick('refresh');
            $('.slider-big').slick('refresh');
        },
        /*  swipeable : true,*/
        responsiveThreshold: 1920
    });

    if ($(window).width() < 1024) {
        $('.js-active-submenu').click(function () {
            $('.header-navigation-menu').addClass('open');
            return false;
        });
    }


    $('.btn-back').click(function () {
        $('.header-navigation-menu').removeClass('open');
        return false;
    });

    $('.filter-holder-tab').click(function () {
        $('.sidebar-filter').addClass('open');
        return false;
    });

    $('.close-filter').click(function () {
        $('.sidebar-filter').removeClass('open');
        return false;
    });

    $('.btn-change-content_js').click(function () {
        $('.pop-up').addClass('open');
        return false;
    });
    $('.btn-correct_js').click(function () {
        $('.pop-up').fadeOut(500);
        return false;
    });

    $('.btn-fdb').click(function () {
        $('.btn-feadback-h').addClass('open');
        return false;
    });

    $('.btn-open-form-js').click(function () {
        $('.feedback-manager-holder').addClass('open');
        return false;
    });

    $('.details-name-js').click(function () {
        $('.tab-hidden').toggleClass('open');
        return false;
    });

    $('.video__a').on('click', function (e) {
        var self = $(this);
        e.preventDefault();
        self.find('img').fadeOut(500);
        var videoSrc = self.attr('href');
        var videoId = videoSrc.substr(videoSrc.length - 11) + '?rel=0&autoplay=1';
        self.find('iframe').fadeIn(500);
        self.find('img').css('z-index', '0');
        self.find('iframe').attr('src', 'https://youtube.com/embed/' + videoId);
    });

    var inputs = document.querySelectorAll('.inputfile');
    Array.prototype.forEach.call(inputs, function (input) {
        var label = input.nextElementSibling,
            labelVal = label.innerHTML;

        input.addEventListener('change', function (e) {
            var fileName = '';
            if (this.files && this.files.length > 1)
                fileName = ( this.getAttribute('data-multiple-caption') || '' ).replace('{count}', this.files.length);
            else
                fileName = e.target.value.split('\\').pop();

            if (fileName)
                label.querySelector('span').innerHTML = fileName;
            else
                label.innerHTML = labelVal;
        });
    });


    $('input[type="tel"]').mask("+38(999)999 99 99");




    /*Function for same height*/
    function heightBlock() {
        $('.partners-slider .slick-list').each(function (i, e) {
                var elH = e.getElementsByClassName("item");
                var maxHeight = 0;
                for (var i = 0; i < elH.length; ++i) {
                    elH[i].style.height = "";
                    if (maxHeight < elH[i].clientHeight) {
                        maxHeight = elH[i].clientHeight;
                    }
                }
                for (var i = 0; i < elH.length; ++i) {
                    elH[i].style.height = maxHeight + "px";
                }
            }
        )
    }


    if ($(window).width() > 768) {
        heightBlock();
        $(window).on('load', function () {
            heightBlock();
        });
        $(window).on('resize', function () {
            heightBlock();
        });
    }


    /*Function for same height end*/



//замена текста в таб
    $('.tab-hidden .tab a').click(function () {
        var text = $(this).text();
        $('.details-name-js span').text(text);
        $('.tab-hidden').toggleClass('open');
    });


    $('.menu-toggle').on('click', function () {
        $(this).toggleClass('active');
        if ($('.header-navigation-menu').css('display') == 'none') {
            $('.header-navigation-menu').fadeIn(500);
        } else {
            $('.header-navigation-menu').fadeOut(500);
        }
        if ($('.over-page').css('display') == 'none') {
            $('.over-page').fadeIn(500);
        } else {
            $('.over-page').fadeOut(500);
        }
    });

    $('select').material_select();

    $('.contact-page .select-dropdown li span').click(function () {
        $(".contact-rap-ctr").addClass('open');

        $("html, body").animate({
            scrollTop: $("header").offset().top
        }, 1e3),
            e.preventDefault()


    });
    $('.btn-back').click(function () {
        $(".contact-rap-ctr").removeClass('open');
        $("html, body").animate({
            scrollTop: $("header").offset().top
        }, 1e3),
            e.preventDefault()
    });

    $('#phone').bind("change keyup input click", function () {
        if (this.value.match(/[^0-9]/g)) {
            this.value = this.value.replace(/[^0-9]/g, '');
        }
    });

    $('.initialized').on('change', function () {
        var value = $(this).val();
        $('.contacts-form').removeClass('open');
        $('.contacts-form').filter(function () {
            return $(this).attr("id") === value
        }).addClass('open');
    });


//start accordion footer
    (function ($) {
        $('.footer-nav > .footer-nav-list:eq(0) a').addClass('open').next().slideDown();

        $('.footer-nav h4').click(function (j) {
            var dropDown = $(this).closest('.footer-nav-list').find('.footer-nav-content');

            $(this).closest('.footer-nav').find('.footer-nav-content').not(dropDown).slideUp();

            if ($(this).hasClass('open')) {
                $(this).removeClass('open');
            } else {
                $(this).closest('.footer-nav').find('h4.open').removeClass('open');
                $(this).addClass('open');
            }

            dropDown.stop(false, true).slideToggle();

            j.preventDefault();
        });
    })(jQuery);
    //end accordion footer


    $(".header-search").click(function () {
        if ($('.search-holder').css('opacity') == '0') {
            $('.search-holder').addClass("open");
            $(this).addClass("active");
            $("header").addClass('fixed');
        }

        if ($('.over-page-main').css('display') == 'none') {
            $('.over-page-main').fadeIn(500);
        } else {
            $('.over-page-main').fadeOut(500);
        }
    });


    $(".search-holder").click(function () {
        $("header").addClass('fixed');
    });

    $(".language-menu").click(function () {
        if ($('.language-link-desktop').css('opacity') == '0') {
            $('.language-link-desktop').toggleClass("open");
            $(this).toggleClass("active");
        }
        $("header").toggleClass('fixed');
    });

    $(".download-catalog").click(function () {
        if ($('.download-catalog-desktop').css('opacity') == '0') {
            $('.download-catalog-desktop').toggleClass("open");
            $(this).toggleClass("active");
        }
        $("header").toggleClass('fixed');
    });

    var scroll_menu = 0;

    var iScrollPos = 0;
    $(window).scroll(function () {
        var iCurScrollPos = $(this).scrollTop();
        if (iCurScrollPos > iScrollPos) {
            $("header").removeClass('fixed');
        } else {
            $("header").addClass('fixed');
        }

        if (iCurScrollPos === 0) {
            $("header").removeClass('fixed');
        }
        iScrollPos = iCurScrollPos;
    });


    $(function ($) {
        $(document).mouseup(function (e) {
            var div = $(".search-holder");
            var div2 = $(".header-navigation-menu");
            var div3 = $(".language-link-desktop");
            var div4 = $(".download-catalog-desktop");
            if (!div.is(e.target)
                && div.has(e.target).length === 0) {
                $('.search-holder').removeClass("open");
                $("header").removeClass('fixed');
                $('.header-search').removeClass("active");
                $('.over-page-main').fadeOut(500);
            }

            if (!div2.is(e.target) && $(window).width() < 1024
                && div2.has(e.target).length === 0) {
                $('.menu-toggle').removeClass('active');
                $('.header-navigation-menu').fadeOut(500);
                $('.over-page').fadeOut(500);
            }

            if (!div3.is(e.target)
                && div3.has(e.target).length === 0) {
                $('.language-menu').removeClass('active');
                $("header").removeClass('fixed');
                $('.language-link-desktop').removeClass("open");
            }
            if (!div4.is(e.target)
                && div4.has(e.target).length === 0) {
                $('.download-catalog').removeClass('active');
                $("header").removeClass('fixed');
                $('.download-catalog-desktop').removeClass("open");
            }
        });
    });


//start slider  dubble
    $('#golden-tile .slider-big, #brickstyle .slider-big, #terragres .slider-big').slick({
        slidesToShow: 1,
        slidesToScroll: 1,
        speed: 500,
        prevArrow: '<button type="button" class="slick-prev"><i class="tile-ico tile-ico-arrow-right"></i></button>',
        nextArrow: '<button type="button" class="slick-next"><i class="tile-ico tile-ico-arrow-left"></i></button>',
        asNavFor: '#golden-tile .slider-small, #brickstyle .slider-small, #terragres .slider-small'
    });
    $('#golden-tile .slider-small, #brickstyle .slider-small, #terragres .slider-small').slick({
        slidesToShow: 3,
        slidesToScroll: 1,
        asNavFor: '#golden-tile .slider-big, #brickstyle .slider-big, #terragres .slider-big',
        dots: false,
        speed: 500,
        focusOnSelect: true,
        arrows: false,
        responsive: [
            {
                breakpoint: 1024,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 1,
                    asNavFor: '#golden-tile .slider-big, #brickstyle .slider-big, #terragres .slider-big',
                    dots: false,
                    speed: 500,
                    focusOnSelect: true,
                    arrows: false
                }
            },
            {
                breakpoint: 768,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    asNavFor: '#golden-tile .slider-big, #brickstyle .slider-big, #terragres .slider-big',
                    dots: false,
                    speed: 500,
                    focusOnSelect: true,
                    arrows: false
                }
            }
        ]
    });

//end slider  dubble

    $slick_slider_one = $('.slider-one');
    var settings_one = {
        infinite: true,
        dots: false,
        autoplay: false,
        speed: 800,
        slidesToShow: 1,
        slidesToScroll: 1,
        fade: true,
        prevArrow: '<button type="button" class="slick-prev"><i class="tile-ico tile-ico-arrow-right"></i></button>',
        nextArrow: '<button type="button" class="slick-next"><i class="tile-ico tile-ico-arrow-left"></i></button>',
        responsive: [
            {
                breakpoint: 550,
                settings: "unslick"
            }
        ]
    };

    $slick_news = $('.news-slider-items');

    var slick_news = {
        dots: false,
        infinite: true,
        speed: 300,
        slidesToShow: 2,
        slidesToScroll: 1,
        prevArrow: '<button type="button" class="slick-prev"><i class="tile-ico tile-ico-arrow-right"></i></button>',
        nextArrow: '<button type="button" class="slick-next"><i class="tile-ico tile-ico-arrow-left"></i></button>',
        responsive: [
            {
                breakpoint: 480,
                settings: "unslick"
            }
        ]
    };

    if ($(window).width() > 480 && $(window).width() < 768) {
        if (!$slick_news.hasClass('slick-initialized')) {
            return $slick_news.slick(slick_news);
        }
    }
    ;

    if ($(window).width() < 550) {
        if ($slick_slider_one.hasClass('slick-initialized')) {
            $slick_slider_one.slick('unslick');
        }
        return
    }
    ;

    $(window).on('resize', function () {
        if ($(window).width() < 550) {
            if ($slick_slider_one.hasClass('slick-initialized')) {
                $slick_slider_one.slick('unslick');
            }
            return
        }

        if (!$slick_slider_one.hasClass('slick-initialized')) {
            return $slick_slider_one.slick(settings_one);
        }
        if ($(window).width() < 480 || $(window).width() > 768) {
            if ($slick_news.hasClass('slick-initialized')) {
                $slick_news.slick('unslick');
            }
            return
        }

        if ($(window).width() > 480 && $(window).width() < 768) {
            if (!$slick_news.hasClass('slick-initialized')) {
                return $slick_news.slick(slick_news);
            }
        }
    });

    $("#accordion").accordion();


//start slider with progress-bar
    $slick_slider_one.slick(settings_one);
    //ticking machine
    var percentTime;
    var tick;
    var time = 1;
    var progressBarIndex = 0;

    $('.progressBarContainer .progressBar').each(function (index) {
        var progress = "<div class='inProgress inProgress" + index + "'></div>";
        $(this).html(progress);
    });

    function startProgressbar() {
        var element = $('.slider-progress-bar span[data-slick-index="' + progressBarIndex + '"]');
        element.parents('.progressBarContainer').find('div').removeClass('active');
        element.parent('div').addClass('active');

        resetProgressbar();
        percentTime = 0;
        tick = setInterval(interval, 10);
    }

    function interval() {
        if (($('.slider-one .slick-track div[data-slick-index="' + progressBarIndex + '"]').attr("aria-hidden")) === "true") {
            progressBarIndex = $('.slider-one .slick-track div[aria-hidden="false"]').data("slickIndex");
            startProgressbar();
        } else {
            percentTime += 1 / (time + 5);
            $('.inProgress' + progressBarIndex).css({
                width: percentTime + "%"
            });
            if (percentTime >= 100) {
                $('.single-item').slick('slickNext');
                progressBarIndex++;
                if (progressBarIndex > 5) {
                    progressBarIndex = 0;
                }
                startProgressbar();
            }
        }
    }

    function resetProgressbar() {
        $('.inProgress').css({
            width: 0 + '%'
        });
        clearInterval(tick);
    }

    startProgressbar();
    $('.progressBarContainer div').click(function () {
        clearInterval(tick);
        var goToThisIndex = $(this).find("span").data("slickIndex");
        $('.single-item').slick('slickGoTo', goToThisIndex, false);
        startProgressbar();
    });

//end slider with progress-bar


// start browser

    var isMobile = false;

    function getBrowser() {
        var ua = navigator.userAgent;
        var bName = function () {
            if (ua.search(/Edge/) > -1) return "edge";
            if (ua.search(/MSIE/) > -1) return "ie";
            if (ua.search(/Trident/) > -1) return "ie11";
            if (ua.search(/Firefox/) > -1) return "firefox";
            if (ua.search(/Opera/) > -1) return "opera";
            if (ua.search(/OPR/) > -1) return "operaWebkit";
            if (ua.search(/YaBrowser/) > -1) return "yabrowser";
            if (ua.search(/Chrome/) > -1) return "chrome";
            if (ua.search(/Safari/) > -1) return "safari";
            if (ua.search(/Maxthon/) > -1) return "maxthon";
        }();
        var version;
        switch (bName) {
            case "edge":
                version = (ua.split("Edge")[1]).split("/")[1];
                break;
            case "ie":
                version = (ua.split("MSIE ")[1]).split(";")[0];
                break;
            case "ie11":
                bName = "ie";
                version = (ua.split("; rv:")[1]).split(")")[0];
                break;
            case "firefox":
                version = ua.split("Firefox/")[1];
                break;
            case "opera":
                version = ua.split("Version/")[1];
                break;
            case "operaWebkit":
                bName = "opera";
                version = ua.split("OPR/")[1];
                break;
            case "yabrowser":
                version = (ua.split("YaBrowser/")[1]).split(" ")[0];
                break;
            case "chrome":
                version = (ua.split("Chrome/")[1]).split(" ")[0];
                break;
            case "safari":
                version = ua.split("Safari/")[1].split("")[0];
                break;
            case "maxthon":
                version = ua.split("Maxthon/")[1];
                break;
        }
        var platform = 'desktop';
        if (/iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase())) platform = 'mobile';
        var browsrObj;
        try {
            browsrObj = {
                platform: platform,
                browser: bName,
                versionFull: version,
                versionShort: version.split(".")[0]
            };
        } catch (err) {
            browsrObj = {
                platform: platform,
                browser: 'unknown',
                versionFull: 'unknown',
                versionShort: 'unknown'
            };
        }
        return browsrObj;
    };
    var browserYou = getBrowser();
    if (browserYou.platform == 'mobile') {
        isMobile = true;
    }
    if ((browserYou.browser == 'ie' && browserYou.versionShort < 9) || ((browserYou.browser == 'opera' || browserYou.browser == 'operaWebkit') && browserYou.versionShort < 18) || (browserYou.browser == 'firefox' && browserYou.versionShort < 30)) {
        alert('Обновите браузер', '')
    }
    ;

    // end browser

    /* validation */
    $('.js_validate .btn-validation').on("click", function () {
        return validate($(this).parents(".js_validate"));
    });


    /* мгновенная валидация для полей*/
    $('.js_validateInp').on('change', 'input', function () {
        if ($(this).is(":required")) {
            validateInp(this);
        } else {
            if ($(this).val().length > 0) {
                $(this).parent('.form-group').addClass('pass');
            } else {
                $(this).parent('.form-group').removeClass('pass');
            }
        }
    });


    /* --------------- start validation --------------*/


    function validate(form) {
        var error_class = "error";
        var norma_class = "pass";
        var item = form.find("[required]");
        var e = 0;
        var reg = undefined;
        var pass = form.find('.password').val();
        var pass_1 = form.find('.password_1').val();
        var email = false;
        var password = false;
        var phone = false;

        function mark(object, expression) {
            if (expression) {
                object.parent('div').addClass(error_class).removeClass(norma_class);
                if (email && (object.val().length > 0)) {
                    object.parent('div').find('.error-txt').text('Неправильный формат Email');
                }
               else {
                    object.parent('div').find('.error-txt').text('Поле не заполнено');
                }
                if (password && (object.val().length > 0)) {
                    object.parent('div').find('.error_text').text('Password must be minimum 6 signs');
                }
                if (phone && (object.val().length > 0)) {
                    object.parent('div').find('.error_text').text('Incorrect phone Format');
                }
                e++;
            } else
                object.parent('div').addClass(norma_class).removeClass(error_class);
        }

        form.find("[required]").each(function () {
            switch ($(this).attr("data-validate")) {
                case undefined:
                    mark($(this), $.trim($(this).val()).length === 0);
                    break;
                case "email":
                    email = true;
                    reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
                    mark($(this), !reg.test($.trim($(this).val())));
                    email = false;
                    break;
                case "phone":
                    phone = true;
                    reg = /[0-9 -()+]{10}$/;
                    mark($(this), !reg.test($.trim($(this).val())));
                    phone = false;
                    break;
                case "pass":
                    password = true;
                    reg = /^[a-zA-Z0-9_-]{6,}$/;
                    mark($(this), !reg.test($.trim($(this).val())));
                    password = false;
                    break;
                case "pass1":
                    mark($(this), (pass_1 !== pass || $.trim($(this).val()).length === 0));
                    break;
                default:
                    reg = new RegExp($(this).attr("data-validate"), "g");
                    mark($(this), !reg.test($.trim($(this).val())));
                    break
            }
        });



        /*validation input-file*/
        $(function(){
            var fileInput = $('#upload');
            var maxSize = fileInput.data('max-size');
                if(fileInput.get(0).files.length){
                    var fileSize = fileInput.get(0).files[0].size; // in bytes
                    if(fileSize>maxSize){
                        $('.file-h').addClass('error');
                        return false;
                    }else{
                        $('.file-h').addClass('pass');
                        $('.file-h').removeClass('error');
                        return false;
                    }
                }else{
                    $('.file-h').addClass('error');
                    return false;
                }
        });
        /* end validation input-file*/


        $('.js_valid_radio').each(function () {
            var inp = $(this).find('input.required');
            var rezalt = 0;
            for (var i = 0; i < inp.length; i++) {
                if ($(inp[i]).is(':checked') === true) {
                    rezalt = 1;
                    break;
                } else {
                    rezalt = 0;
                }
            }
            if (rezalt === 0) {
                $(this).addClass(error_class).removeClass(norma_class);
                e = 1;
            } else {
                $(this).addClass(norma_class).removeClass(error_class);
            }
        })
        if (e == 0) {
            return true;
        }
        else {
            form.find("." + error_class + " input:first").focus();
            return false;
        }
    }


    function validateInp(element) {
        var error_class = "error";
        var norma_class = "pass";
        var e = 0;
        var reg = undefined;
        var email = false;

        function mark(object, expression) {
            if (expression) {
                object.parent('div').addClass(error_class).removeClass(norma_class).find('.error-text').css('display', 'block');
                if (email && (object.val().length > 0)) {
                    object.parent('div').find('.error-txt').text('Неправильный формат Email');
                }
                e++;
            } else {
                object.parent('div').addClass(norma_class).removeClass(error_class).find('.error-text').css('display', 'none');
            }
        }

        if ($(element).is(":required")) {
            $(element).each(function () {
                switch ($(this).attr("data-validate")) {
                    case undefined:
                        mark($(this), $.trim($(this).val()).length === 0);
                        break;
                    case "email":
                        email = true;
                        reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
                        mark($(this), !reg.test($.trim($(this).val())));
                        email = false;
                        break;
                    case "phone":
                        phone = true;
                        reg = /[0-9 -()+]{10}$/;
                        mark($(this), !reg.test($.trim($(this).val())));
                        phone = false;
                        break;
                    case "numb":
                        reg = /[0-9]$/;
                        mark($(this), !reg.test($.trim($(this).val())));
                        break;
                    case "pass":
                        password = true;
                        reg = /^[a-zA-Z0-9_-]{3,}$/;
                        mark($(this), !reg.test($.trim($(this).val())));
                        password = false;
                        break;
                    case "pass1":
                        mark($(this), (pass_1 !== pass || $.trim($(this).val()).length === 0));
                        break;
                    default:
                        reg = new RegExp($(this).data("validate"), "g");
                        mark($(this), !reg.test($.trim($(this).val())));
                        break;
                }
            });
        }
        if (e == 0) {
            return true;
        }
        else {
            $("." + error_class + ":first").focus();
            return false;
        }
    }


    /* --------------- end validation --------------*/


//start scroll-down
    $("body").on("click", ".js_scroll_down", function (e) {
        $("html, body").animate({
            scrollTop: $(".anchor").offset().top
        }, 1e3),
            e.preventDefault()
    });
// end scroll-down

    //start scroll-down
    $("body").on("click", ".btn-more_js", function (e) {
        $("html, body").animate({
            scrollTop: $(".anchor2").offset().top
        }, 1e3),
            e.preventDefault()
    });
// end scroll-down

    //start scroll-down
    $("body").on("click", ".cv-holder_js", function (e) {
        $("html, body").animate({
            scrollTop: $(".anchor3").offset().top
        }, 1e3),
            e.preventDefault()
    });
// end scroll-down

    //start scroll-down
    $("body").on("click", ".anchor-form-js", function (e) {
        $("html, body").animate({
            scrollTop: $(".js-cv").offset().top
        }, 1e3),
            e.preventDefault()

        $('.js-cv').addClass('open');
    });
// end scroll-down

    new WOW().init();
    new ScrollFlow
});


$.fn.ScrollFlow = function (t) {
    new ScrollFlow(t)
}, ScrollFlow = function (t) {
    this.init(t)
}, $.extend(ScrollFlow.prototype, {
    init: function (t) {
        this.options = $.extend({
            useMobileTimeouts: !0,
            mobileTimeout: 100,
            durationOnLoad: 0,
            durationOnResize: 250,
            durationOnScroll: 500
        }, t), this.lastScrollTop = 0, this.bindScroll(), this.bindResize(), this.update(this.options.durationOnLoad)
    }, bindScroll: function () {
        var t = this;
        $(window).scroll(function () {
            t.update()
        }), $(window).bind("gesturechange", function () {
            t.update()
        })
    }, bindResize: function () {
        var t = this;
        $(window).resize(function () {
            t.update(t.options.durationOnResize)
        })
    }, update: function (t) {
        var o = this;
        winHeight = $(window).height(), scrollTop = $(window).scrollTop(), $(".scrollflow").each(function (a, s) {
            objOffset = $(s).offset(), objOffsetTop = parseInt(objOffset.top), effectDuration = o.options.durationOnScroll, effectDuration = "undefined" != typeof t ? t : effectDuration, effectiveFromPercentage = isNaN(parseInt($(s).attr("data-scrollflow-start") / 100)) ? -.25 : parseInt($(s).attr("data-scrollflow-start")) / 100, scrollDistancePercentage = isNaN(parseInt($(s).attr("data-scrollflow-distance") / 100)) ? .5 : parseInt($(s).attr("data-scrollflow-distance")) / 100, effectiveFrom = objOffsetTop - winHeight * (1 - effectiveFromPercentage), effectiveTo = objOffsetTop - winHeight * (1 - scrollDistancePercentage), parallaxScale = .8, parallaxOpacity = 0, parallaxOffset = -100, factor = 0, scrollTop > effectiveFrom && (factor = (scrollTop - effectiveFrom) / (effectiveTo - effectiveFrom), factor = factor > 1 ? 1 : factor), options = {
                opacity: 1,
                scale: 1,
                translateX: 0,
                translateY: 0
            }, $(s).hasClass("-opacity") && (options.opacity = 0 + factor), $(s).hasClass("-pop") && (options.scale = .8 + .2 * factor), $(s).hasClass("-slide-left") && (options.translateX = -1 * (-100 + 100 * factor)), $(s).hasClass("-slide-right") && (options.translateX = -100 + 100 * factor), $(s).hasClass("-slide-top") && (options.translateY = -1 * (-100 + 100 * factor)), $(s).hasClass("-slide-bottom") && (options.translateY = -100 + 100 * factor), $(s).css({
                webkitFilter: "opacity(" + options.opacity + ")",
                mozFilter: "opacity(" + options.opacity + ")",
                oFilter: "opacity(" + options.opacity + ")",
                msFilter: "opacity(" + options.opacity + ")",
                filter: "opacity(" + options.opacity + ")",
                webkitTransform: "translate3d( " + parseInt(options.translateX) + "px, " + parseInt(options.translateY) + "px, 0px ) scale(" + options.scale + ")",
                mozTransform: "translate3d( " + parseInt(options.translateX) + "px, " + parseInt(options.translateY) + "px, 0px ) scale(" + options.scale + ")",
                oTransform: "translate3d( " + parseInt(options.translateX) + "px, " + parseInt(options.translateY) + "px, 0px ) scale(" + options.scale + ")",
                msTransform: "translate3d( " + parseInt(options.translateX) + "px, " + parseInt(options.translateY) + "px, 0px ) scale(" + options.scale + ")",
                transform: "translate3d( " + parseInt(options.translateX) + "px, " + parseInt(options.translateY) + "px, 0px ) scale(" + options.scale + ")",
                transition: "all " + effectDuration + "ms ease-out"
            })
        })
    }
});


document.addEventListener("DOMContentLoaded", function () {
    if (document.querySelectorAll('path').length) {
        for (var i = 0; i < document.querySelectorAll('path').length; i++) {
            var stroke = document.querySelectorAll('path')[i].getTotalLength();
            document.querySelectorAll('path')[i].style.strokeDasharray = stroke
            document.querySelectorAll('path')[i].style.strokeDashoffset = stroke
        }
    }

    if (document.querySelectorAll('line').length) {
        for (var k = 0; k < document.querySelectorAll('line').length; k++) {
            var stroke_line = document.querySelectorAll('line')[k].getTotalLength();
            document.querySelectorAll('line')[k].style.strokeDasharray = stroke_line
            document.querySelectorAll('line')[k].style.strokeDashoffset = stroke_line
        }
    }
    if (document.querySelectorAll('polyline').length) {
        for (var l = 0; l < document.querySelectorAll('polyline').length; l++) {
            var stroke_polyline = document.querySelectorAll('polyline')[l].getTotalLength();
            document.querySelectorAll('polyline')[l].style.strokeDasharray = stroke_polyline
            document.querySelectorAll('polyline')[l].style.strokeDashoffset = stroke_polyline
        }
    }
    if (document.querySelectorAll('polygon').length) {
        for (var z = 0; z < document.querySelectorAll('polygon').length; z++) {
            var stroke_polygon = document.querySelectorAll('polygon')[z].getTotalLength();
            document.querySelectorAll('polygon')[z].style.strokeDasharray = stroke_polygon
            document.querySelectorAll('polygon')[z].style.strokeDashoffset = stroke_polygon
        }
    }

});


//start counter
/*var countdownNumberEl = document.getElementById('countdown-number');
 var countdown = 10;

 countdownNumberEl.textContent = countdown;

 setInterval(function () {
 countdown = --countdown <= 0 ? 10 : countdown;

 countdownNumberEl.textContent = countdown;
 }, 1000);*/
// end counter

